name: bookPang-project CD

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize] # PR이 열리거나 업데이트될 때 트리거

jobs:
  deploy:
    if: ${{ github.event.pull_request.head.ref == 'dev' }} # dev 브랜치에서 온 PR만 실행
    runs-on: ubuntu-24.04

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            cd /home/ubuntu/BoookPang-BE
            git switch main
            git pull origin main

            echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" > .env
            echo "MYSQL_URI=${{ secrets.MYSQL_URI }}" >> .env
            echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> .env
            echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
            echo "VONAGE_API_KEY=${{ secrets.VONAGE_API_KEY }}" >> .env
            echo "VONAGE_API_SECRET=${{ secrets.VONAGE_API_SECRET }}" >> .env
            echo "VONAGE_SENDER_NUMBER=${{ secrets.VONAGE_SENDER_NUMBER }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "ELASTICSEARCH_HOST=${{ secrets.ELASTICSEARCH_NODE }}" >> .env
          
            npm ci
            npm run build

            pm2 delete BookPang-BE || true
            pm2 --name BookPang-BE start dist/main.js
            pm2 save
